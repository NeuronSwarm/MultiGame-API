// Generated by CoffeeScript 1.10.0
(function() {
  var BinaryFile, Schema, mongoose, passportLocalMongoose;

  mongoose = require('mongoose');

  Schema = mongoose.Schema;

  passportLocalMongoose = require('passport-local-mongoose');

  BinaryFile = new Schema({
    path: String,
    map_name: String,
    permission_level_id: Number,
    user_id: Number,
    created_at: Date,
    updated_at: Date,
    permission: String
  });
  BinaryFile.methods.setPermissionLevel = function(level, callback){
    if(level == 'private'){
      this.permission_level_id = 1;
    } else if(level == 'protected'){
      this.permission_level_id = 2;
    } else if(level == 'public'){
      this.permission_level_id = 3;
    } else {
      console.error('not a valid permission level');
      throw 'not a valid permission level';
    }
    this.save(callback);
  }

  BinaryFile.methods.getPermissionLevel = function(){
    if(this.permission_level_id == 1){
      return 'private'
    } else if(this.permission_level_id == 2){
      return 'protected'
    } else if(this.permission_level_id == 3){
      return 'public'
    } else {
      console.error(`${this.map_name} does not have a permission level`);
    }
  }

  // BinaryFile.plugin(passportLocalMongoose);

  module.exports = mongoose.model('BinaryFile', BinaryFile);

}).call(this);
