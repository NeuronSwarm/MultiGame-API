// Generated by CoffeeScript 1.10.0
(function() {
  var Account, Schema, mongoose, passportLocalMongoose;
  var autoIncrement = require('mongoose-auto-increment');
  mongoose = require('mongoose');

  Schema = mongoose.Schema;

  passportLocalMongoose = require('passport-local-mongoose');

  var connection = mongoose
    .createConnection("mongodb://localhost/passport_local_mongoose_express4");
  autoIncrement.initialize(connection);

  Account = new Schema({
    email: String,
    emailToken: String,
    emailPending: Boolean,
    username: String,
    password: String,
    created_at: Date,
    resetPasswordToken: String,
    resetPasswordExpiration: Date,
    roles: [String]
  });

  Account.methods.setRoles = function(roles, cb){
    self = this;
    if(self.roles == null){
        self.roles = [];
      roles.forEach(function(role){
        console.log(role);
        self.roles.push(role);
      })
    }
    else
      self.roles = roles;
    self.save(function(err){
      if(err) console.error(err);
      return cb(`roles for ${self.username} were updated`);
    })
  };
  Account.plugin(autoIncrement.plugin, { model: 'accounts', field: 'id' });
  Account.plugin(passportLocalMongoose);

  module.exports = mongoose.model('accounts', Account);

}).call(this);
